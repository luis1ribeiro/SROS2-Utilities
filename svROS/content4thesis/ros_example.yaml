%YAML 1.1
---
project: turtle
packages:
    - turtlesim
    - random
    - multiplexer
    - safety
    - alarm

nodes:
    random:
        rosname: random
        advertise:
            /notsafe: geometry_msgs/Twist
            /notsafe: twist
        hpl:
            properties:
                !! criar um campo pred DATA para definir que existe data?
                - 'globally: some /notsafe {DATA}'
                - 'globally: some /notsafe {direction in [0,1], vel in [0,1]}'
                - 'globally: /notsafe {linear.x in 0 to 10, linear.y in 0 to 10, linear.z in 0 to 10}'

    multiplexer:
        rosname: multiplexer
        advertise:
            /turtle_movement: geometry_msgs/Twist
            /alarm: Alarm
        subscribe:
            /notsafe: geometry_msgs/Twist
            /safe: geometry_msgs/Twist
        hpl:
            properties:
                - 'globally : /turtle_movement {DATA} as V requires /notsafe {$V} || /safe {$V}'
                - 'globally : /notsafe {vel = 1} causes /alarm {data = 1}'
                - 'globally : /safe {vel = 1} causes /alarm {data = 1}'

                - 'globally : /notsafe {vel = 0} causes /alarm {data = 0}'
                - 'globally : /safe {vel = 0} causes /alarm {data = 0}'

                - 'globally : /notsafe {DATA} requires no /safe {DATA}' --> PRIORIDADE não definido na linguagem!
                ou 
                - 'globally : /notsafe {DATA} requires /safe {!DATA}' 

        !! Vou ter que claramente forçar uma extensão da linguagem!

    rosname: turtle
        advertise:
            /turtle_position: position
        subscribe:
            /turtle_movement: geometry_msgs/Twist
        hpl:
            !! constraints:
                variables: current 
            properties:
                - 'globally : /turtle_position {pos = math ($current + 1)} requires /turtle_movement {vel = 0, direction = 1}'
                - 'globally : /turtle_position {pos = math ($current - 1)} requires /turtle_movement {vel = 0, direction = 0}'
                - 'globally : /turtle_position {pos = math ($current + 2)} requires /turtle_movement {vel = 1, direction = 1}'
                - 'globally : /turtle_position {pos = math ($current - 2)} requires /turtle_movement {vel = 1, direction = 0}'

                check if current is variable -> $current -> atualiza current
            
    rosname: safety
        advertise:
            /safe: geometry_msgs/Twist
        subscribe:
            /turtle_position: position
        hpl:
            !! constraints:
                not_variables: limit.x
            
            properties:
                - 'globally : /safe {DATA} requires /position {pos = $limit.x}'

    !! WARNER !!
    rosname: alarm
        subscribe:
            /alarm: Alarm
        hpl:
            !! constraints:
                variables: light
            properties:
                - 'globally : /alarm {pos = math (current + )} requires /turtle_movement {DATA}'


-----------------------
configurations:
    startup:
        launch:
            - agrobv16_supervisor/launch/startup.launch
        hints:
            /agrobv16SUPERVISOR:
                subscribe:
                    /scan: sensor_msgs/LaserScan
                    /lidar1/scan: sensor_msgs/LaserScan
                    /joy_teleop/joy: sensor_msgs/Joy
                advertise:
                    /agrobv16/max_velocity: geometry_msgs/Twist
                    /supervisor/cmd_vel: geometry_msgs/Twist
                    /agrobv16/current_state: std_msgs/Int16MultiArray
            /supervisorGUI1:
                subscribe:
                    /agrobv16/current_state: std_msgs/Int16MultiArray
            /Agrobv16_twist_mux:
                subscribe:
                    /agrobv16/max_velocity: geometry_msgs/Twist
                    /supervisor/cmd_vel: geometry_msgs/Twist
                    /joy_teleop/cmd_vel: geometry_msgs/Twist
                advertise:
                    /husky_velocity_controller/cmd_vel: geometry_msgs/Twist
        hpl:
            properties:
                - 'globally: /husky_velocity_controller/cmd_vel {linear.x = 0, angular.x != 0}
                    requires /scan {ranges[0] in 0 to 4} || /joy_teleop/joy {button[0] = 1}'
                - 'globally: /husky_velocity_controller/cmd_vel {linear.x in 1 to 10}
                    requires /joy_teleop/joy {button[0] = 1} || /joy_teleop/joy {button[1] = 1}'
                - 'globally: /agrobv16/current_state {data[0] = 3} requires /joy_teleop/joy {button[0] = 0, button[1] = 1}'
                - 'globally: /agrobv16/current_state {data[0] = 6} requires /joy_teleop/joy {button[0] = 1}'
                - 'globally: /agrobv16/current_state {data[0] = 0} requires /joy_teleop/joy {button[1] = 0, button[0] = 0}'
