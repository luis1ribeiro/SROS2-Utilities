@book{dataprocessingbook
  , author = {Gama J. and Rodrigues P.P.}
  , editor = {Gama J. and Gaber M.M.}
  , title = {Data Stream Processing}
  , publisher = {Springer, Berlin, Heidelberg}
  , year = {2007}
  , isbn = {978-3-540-73678-3}
  , doi = {https://doi.org/10.1007/3-540-73679-4_3}
  , pages = {25}
}

@article{usersdataarticle
  , author = {Michelle Goddard}
  , title ={The EU General Data Protection Regulation (GDPR): European Regulation that has a Global Impact}
  , journal = {International Journal of Market Research}
  , volume = {59}
  , number = {6}
  , pages = {703-705}
  , year = {2017}
  , doi = {10.2501/IJMR-2017-050}
  , URL = {https://doi.org/10.2501/IJMR-2017-050}
  , eprint = {https://doi.org/10.2501/IJMR-2017-050}
}

@article{anonymizingstreamingdata
  , author={Li, Jianzhong and Ooi, Beng Chin and Wang, Weiping}
  , booktitle={2008 IEEE 24th International Conference on Data Engineering}
  , title={Anonymizing Streaming Data for Privacy Protection}
  , year={2008}
  , volume={}
  , number={}
  , pages={1367-1369}
  , doi={10.1109/ICDE.2008.4497558}
}

@article{7024651
  , author={Fisher, Roy and Hancke, Gerhard}
  , booktitle={2014 Ninth International Conference on P2P, Parallel, Grid, Cloud and Internet Computing}
  , title={DTLS for Lightweight Secure Data Streaming in the Internet of Things}
  , year={2014}
  , volume={}
  , number={}
  , pages={585-590}
  , doi={10.1109/3PGCIC.2014.113}
}

@misc{soteria
  , author = {Cláudia Brito and Pedro Ferreira and Bernardo Portela and Rui Oliveira and João Paulo}
  , title = {Soteria: Privacy-Preserving Machine Learning for Apache Spark}
  , howpublished = {Cryptology ePrint Archive, Report 2021/966}
  , year = {2021}
  , note = {\url{https://ia.cr/2021/966}}
}

@article{6227695
  , author={Stolfo, Salvatore J. and Salem, Malek Ben and Keromytis, Angelos D.}
  , booktitle={2012 IEEE Symposium on Security and Privacy Workshops}
  , title={Fog Computing: Mitigating Insider Data Theft Attacks in the Cloud}
  , year={2012}
  , volume={}
  , number={}
  , pages={125-128}
  , doi={10.1109/SPW.2012.19}
}

@article{IQBAL201698
  , title = {On cloud security attacks: A taxonomy and intrusion detection and prevention as a service}
  , journal = {Journal of Network and Computer Applications}
  , volume = {74}
  , pages = {98-120}
  , year = {2016}
  , issn = {1084-8045}
  , doi = {https://doi.org/10.1016/j.jnca.2016.08.016}
  , url = {https://www.sciencedirect.com/science/article/pii/S1084804516301771}
  , author = {Salman Iqbal and Miss Laiha {Mat Kiah} and Babak Dhaghighi and Muzammil Hussain and Suleman Khan and Muhammad Khurram Khan and Kim-Kwang {Raymond Choo}}
  , keywords = {Cloud computing, Taxonomy, Security attacks, Intrusion detection}
  , abstract = {Major provisioning of cloud computing is mainly delivered via Software as a Service, Platform as a Service and Infrastructure as a Service. However, these service delivery models are vulnerable to a range of security attacks, exploiting both cloud specific and existing web service vulnerabilities. Taxonomies are a useful tool for system designers as they provide a systematic way of understanding, identifying and addressing security risks. In this research work, Cloud based attacks and vulnerabilities are collected and classify with respect to their cloud models. We also present taxonomy of cloud security attacks and potential mitigation strategies with the aim of providing an in-depth understanding of security requirements in the cloud environment. We also highlight the importance of intrusion detection and prevention as a service.}
}

@article{5655240
  , author={Takabi, Hassan and Joshi, James B.D. and Ahn, Gail-Joon}
  , journal={IEEE Security   Privacy}
  , title={Security and Privacy Challenges in Cloud Computing Environments}
  , year={2010}
  , volume={8}
  , number={6}
  , pages={24-31}
  , doi={10.1109/MSP.2010.186}
}

@article{intelsgxexplained
  , author={Victor Costan and Srinivas Devadas}
  , title={Intel SGX Explained}
  , year={}
  , volume={}
  , number={}
  , pages={}
  , doi={}
}

@misc{graminedocs
  , author       = ""
  , title        = "Graphene’s documentation"
  , howpublished = "\url{https://github.com/gramineproject/graphene}"
  , month        = ""
  , year         = ""
  , note         = ""
  , annote       = ""
}

@misc{apachesparkdocs
  , author       = ""
  , title        = "Apache Spark’s documentation"
  , howpublished = "\url{https://books.japila.pl/apache-spark-internals/overview}"
  , month        = ""
  , year         = ""
  , note         = ""
  , annote       = ""
}

@book{dataprotection
  , author = {Paul Voigt and Axel von dem Bussche}
  , editor = {}
  , title = {The EU General Data Protection Regulation (GDPR)}
  , publisher = {Springer, Cham}
  , year = {2017}
  , isbn = {978-3-319-57958-0}
  , doi = {https://doi.org/10.1007/978-3-319-57959-7}
  , pages = {}
}

@misc{sgxdocs
  , author       = ""
  , title        = "What is Intel SGX?"
  , howpublished = "\url{https://www.intel.com/content/www/us/en/architecture-and-technology/software-guard-extensions.html}"
  , month        = ""
  , year         = ""
  , note         = ""
  , annote       = ""
}

@article{7345265
  , author={Sabt, Mohamed and Achemlal, Mohammed and Bouabdallah, Abdelmadjid}
  , booktitle={2015 IEEE Trustcom/BigDataSE/ISPA}
  , title={Trusted Execution Environment: What It is, and What It is Not}
  , year={2015}
  , volume={1}
  , number={}
  , pages={57-64}
  , doi={10.1109/Trustcom.2015.357}
}

@article{mapreducevsspark
  , author = {Shi, Juwei and Qiu, Yunjie and Minhas, Umar Farooq and Jiao, Limei and Wang, Chen and Reinwald, Berthold and \"{O}zcan, Fatma}
  , title = {Clash of the Titans: MapReduce vs. Spark for Large Scale Data Analytics}
  , year = {2015}
  , issue_date = {September 2015}
  , publisher = {VLDB Endowment}
  , volume = {8}
  , number = {13}
  , issn = {2150-8097}
  , url = {https://doi.org/10.14778/2831360.2831365}
  , doi = {10.14778/2831360.2831365}
  , abstract = {MapReduce and Spark are two very popular open source cluster computing frameworks for large scale data analytics. These frameworks hide the complexity of task parallelism and fault-tolerance, by exposing a simple programming API to users. In this paper, we evaluate the major architectural components in MapReduce and Spark frameworks including: shuffle, execution model, and caching, by using a set of important analytic workloads. To conduct a detailed analysis, we developed two profiling tools: (1) We correlate the task execution plan with the resource utilization for both MapReduce and Spark, and visually present this correlation; (2) We provide a break-down of the task execution time for in-depth analysis. Through detailed experiments, we quantify the performance differences between MapReduce and Spark. Furthermore, we attribute these performance differences to different components which are architected differently in the two frameworks. We further expose the source of these performance differences by using a set of micro-benchmark experiments. Overall, our experiments show that Spark is about 2.5x, 5x, and 5x faster than MapReduce, for Word Count, k-means, and PageRank, respectively. The main causes of these speedups are the efficiency of the hash-based aggregation component for combine, as well as reduced CPU and disk overheads due to RDD caching in Spark. An exception to this is the Sort workload, for which MapReduce is 2x faster than Spark. We show that MapReduce's execution model is more efficient for shuffling data than Spark, thus making Sort run faster on MapReduce.}
  , journal = {Proc. VLDB Endow.}
  , month = {sep}
  , pages = {2110–2121}
  , numpages = {12}
}